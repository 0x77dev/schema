import {
  GraphQLiteralObject,
  GraphQLiteralInterface,
  GraphQLiteralEnum,
  GraphQLiteralSchema,
} from "gqliteral";

const Node = GraphQLiteralInterface("Node", t => {
  t.id("id", { description: "ID of the Resource" });
  t.resolveType(obj => obj.type);
});

const User = GraphQLiteralObject("User", t => {
  t.interface("Node");
  t.string("firstName", { property: "first_name" });
  t.string("lastName", { property: "last_name" });
});

const Post = GraphQLiteralObject("Post", t => {
  t.interface("Node");
  t.field("status", "PostStatus", { description: "Status of the post" });
  t.string("content", { description: "Content of the post" });
});

const Comment = GraphQLiteralObject("Comment", t => {
  t.interface("Node");
  t.description("A comment is created by a User and is associated with a Post");
  t.id("id", { description: "ID of the Comment" });
  t.field("author", "User", { description: "Author of the post" });
});

const PostStatus = GraphQLiteralEnum("PostStatus", ["DRAFT", "PUBLISHED"]);

const CommentStatus = GraphQLiteralEnum("CommentStatus", t => {
  t.mix("PostStatus");
  t.members("MODERATED", "PINNED");
});

const schema = GraphQLiteralSchema({
  types: [User, Post, Comment, PostStatus, CommentStatus],
});
