/**
 * This file is automatically generated by GraphQL Nexus
 * Do not make changes to this file directly
 * 
 * For better typings, you should provide configuration for how to lookup 
 * the types. See the documentation for "typegenAutoConfig"
 */


declare global {
  interface NexusGen extends NexusGenTypes {}
}

// Maybe Promise
export type MaybePromise<T> = T | PromiseLike<T>;

// Maybe Promise List
export type MaybePromiseList<T> = Array<MaybePromise<T>>;

// Maybe Thunk
export type MaybeThunk<T> = T | (() => T);

// Maybe Thunk, with args
export type MaybeThunkArgs<T, A> = T | ((args?: A) => T);

export type QueryBarReturnType = Bar_ReturnType;

export type Query_ReturnType = {};

export type BarOkReturnType = boolean;

export type BazOkReturnType = boolean;

export type FooOkReturnType = boolean;

export interface FooRootType {
  ok: boolean;
}

export type Foo_ReturnType = {
  ok: MaybeThunk<MaybePromise<boolean>>;
}

export interface InputType {
  answer?: null | number;
  key: string;
}

export type BarRootType = FooRootType;

export type Bar_ReturnType = Foo_ReturnType;

export type BazRootType = FooRootType;

export type Baz_ReturnType = Foo_ReturnType;

export interface NexusGenArgTypes {
}

export interface NexusGenRootTypes {
  Bar: BarRootType;
  Baz: BazRootType;
  Query: {};
  Foo: FooRootType;
}

export interface NexusGenReturnTypes {
  Query: {
    bar: QueryBarReturnType;
  };
  Bar: {
    ok: BarOkReturnType;
  };
  Baz: {
    ok: BazOkReturnType;
  };
  Foo: {
    ok: FooOkReturnType;
  };
}

export interface NexusGenTypes {
  argTypes: NexusGenArgTypes;
  backingTypes: NexusGenRootTypes;
  returnTypes: NexusGenReturnTypes;
  context: unknown;
  enums: {};
  objects: {
    Query: {};
    Foo: FooRootType;
  };
  interfaces: {
    Bar: "Foo";
    Baz: "Foo";
  };
  unions: {};
  scalars: {
    Boolean: any;
    String: any;
    Int: any;
  };
  inputObjects: {
    InputType: InputType;
  };
  allInputTypes: 
    | Extract<keyof NexusGenTypes['inputObjects'], string>
    | Extract<keyof NexusGenTypes['enums'], string>
    | Extract<keyof NexusGenTypes['scalars'], string>;
  allOutputTypes: 
    | Extract<keyof NexusGenTypes['objects'], string>
    | Extract<keyof NexusGenTypes['enums'], string>
    | Extract<keyof NexusGenTypes['unions'], string>
    | Extract<keyof NexusGenTypes['interfaces'], string>
    | Extract<keyof NexusGenTypes['scalars'], string>;
}

export type Gen = NexusGenTypes;
