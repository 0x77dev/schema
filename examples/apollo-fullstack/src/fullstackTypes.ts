/**
 * This file is autogenerated. Do not edit directly.
 */

import * as t from "./typeDefs";

export type BaseScalarNames = "String" | "Int" | "Float" | "ID" | "Boolean";

export interface Generated_Type_Query_Field_launch {
  returnType:
    | Generated_Type_Launch["rootType"]
    | PromiseLike<Generated_Type_Launch["rootType"]>;
  args: Generated_Type_Query_Field_launch_Args;
}

export interface Generated_Type_Query_Field_launch_Args {
  count?: number | null | undefined;
  id: string;
}

export interface Generated_Type_Query_Field_launches {
  returnType:
    | Generated_Type_LaunchConnection["rootType"]
    | PromiseLike<Generated_Type_LaunchConnection["rootType"]>;
  args: Generated_Type_Query_Field_launches_Args;
}

export interface Generated_Type_Query_Field_launches_Args {
  after?: string | null | undefined;
  pageSize?: number | null | undefined;
}

export interface Generated_Type_Query_Field_me {
  returnType:
    | null
    | Generated_Type_User["rootType"]
    | PromiseLike<null | Generated_Type_User["rootType"]>;
  args: {};
}

export interface Generated_Type_Query_Fields {
  launch: Generated_Type_Query_Field_launch;
  launches: Generated_Type_Query_Field_launches;
  me: Generated_Type_Query_Field_me;
}

export interface Generated_Type_Query {
  rootType: unknown;
  fields: Generated_Type_Query_Fields;
}

export interface Generated_Type_Launch_Field_id {
  returnType: string | PromiseLike<string>;
  args: {};
}

export interface Generated_Type_Launch_Field_isBooked {
  returnType: boolean | PromiseLike<boolean>;
  args: {};
}

export interface Generated_Type_Launch_Field_mission {
  returnType:
    | Generated_Type_Mission["rootType"]
    | PromiseLike<Generated_Type_Mission["rootType"]>;
  args: {};
}

export interface Generated_Type_Launch_Field_rocket {
  returnType:
    | Generated_Type_Rocket["rootType"]
    | PromiseLike<Generated_Type_Rocket["rootType"]>;
  args: {};
}

export interface Generated_Type_Launch_Field_site {
  returnType: null | string | PromiseLike<null | string>;
  args: {};
}

export interface Generated_Type_Launch_Fields {
  id: Generated_Type_Launch_Field_id;
  isBooked: Generated_Type_Launch_Field_isBooked;
  mission: Generated_Type_Launch_Field_mission;
  rocket: Generated_Type_Launch_Field_rocket;
  site: Generated_Type_Launch_Field_site;
}

export interface Generated_Type_Launch {
  rootType: t.Launch;
  fields: Generated_Type_Launch_Fields;
}

export interface Generated_Type_Mission_Field_missionPatch {
  returnType: string | PromiseLike<string>;
  args: Generated_Type_Mission_Field_missionPatch_Args;
}

export interface Generated_Type_Mission_Field_missionPatch_Args {
  size?: GeneratedEnums["PatchSize"] | null | undefined;
}

export interface Generated_Type_Mission_Field_name {
  returnType: null | string | PromiseLike<null | string>;
  args: {};
}

export interface Generated_Type_Mission_Fields {
  missionPatch: Generated_Type_Mission_Field_missionPatch;
  name: Generated_Type_Mission_Field_name;
}

export interface Generated_Type_Mission {
  rootType: t.Mission;
  fields: Generated_Type_Mission_Fields;
}

export interface Generated_Type_Rocket_Field_id {
  returnType: string | PromiseLike<string>;
  args: {};
}

export interface Generated_Type_Rocket_Field_name {
  returnType: null | string | PromiseLike<null | string>;
  args: {};
}

export interface Generated_Type_Rocket_Field_type {
  returnType: null | string | PromiseLike<null | string>;
  args: {};
}

export interface Generated_Type_Rocket_Fields {
  id: Generated_Type_Rocket_Field_id;
  name: Generated_Type_Rocket_Field_name;
  type: Generated_Type_Rocket_Field_type;
}

export interface Generated_Type_Rocket {
  rootType: unknown;
  fields: Generated_Type_Rocket_Fields;
}

export interface Generated_Type_LaunchConnection_Field_cursor {
  returnType: string | PromiseLike<string>;
  args: {};
}

export interface Generated_Type_LaunchConnection_Field_hasMore {
  returnType: boolean | PromiseLike<boolean>;
  args: {};
}

export interface Generated_Type_LaunchConnection_Field_launches {
  returnType:
    | Generated_Type_Launch["rootType"][]
    | PromiseLike<Generated_Type_Launch["rootType"][]>
    | PromiseLike<Generated_Type_Launch["rootType"]>[];
  args: {};
}

export interface Generated_Type_LaunchConnection_Fields {
  cursor: Generated_Type_LaunchConnection_Field_cursor;
  hasMore: Generated_Type_LaunchConnection_Field_hasMore;
  launches: Generated_Type_LaunchConnection_Field_launches;
}

export interface Generated_Type_LaunchConnection {
  rootType: unknown;
  fields: Generated_Type_LaunchConnection_Fields;
}

export interface Generated_Type_User_Field_email {
  returnType: string | PromiseLike<string>;
  args: {};
}

export interface Generated_Type_User_Field_id {
  returnType: string | PromiseLike<string>;
  args: {};
}

export interface Generated_Type_User_Field_trips {
  returnType:
    | Generated_Type_Launch["rootType"][]
    | PromiseLike<Generated_Type_Launch["rootType"][]>
    | PromiseLike<Generated_Type_Launch["rootType"]>[];
  args: {};
}

export interface Generated_Type_User_Fields {
  email: Generated_Type_User_Field_email;
  id: Generated_Type_User_Field_id;
  trips: Generated_Type_User_Field_trips;
}

export interface Generated_Type_User {
  rootType: unknown;
  fields: Generated_Type_User_Fields;
}

export interface Generated_Type_Mutation_Field_bookTrips {
  returnType:
    | Generated_Type_TripUpdateResponse["rootType"]
    | PromiseLike<Generated_Type_TripUpdateResponse["rootType"]>;
  args: Generated_Type_Mutation_Field_bookTrips_Args;
}

export interface Generated_Type_Mutation_Field_bookTrips_Args {
  launchIds: string[];
}

export interface Generated_Type_Mutation_Field_cancelTrip {
  returnType:
    | Generated_Type_TripUpdateResponse["rootType"]
    | PromiseLike<Generated_Type_TripUpdateResponse["rootType"]>;
  args: Generated_Type_Mutation_Field_cancelTrip_Args;
}

export interface Generated_Type_Mutation_Field_cancelTrip_Args {
  launchId: string;
}

export interface Generated_Type_Mutation_Field_login {
  returnType: null | string | PromiseLike<null | string>;
  args: Generated_Type_Mutation_Field_login_Args;
}

export interface Generated_Type_Mutation_Field_login_Args {
  email?: string | null | undefined;
}

export interface Generated_Type_Mutation_Fields {
  bookTrips: Generated_Type_Mutation_Field_bookTrips;
  cancelTrip: Generated_Type_Mutation_Field_cancelTrip;
  login: Generated_Type_Mutation_Field_login;
}

export interface Generated_Type_Mutation {
  rootType: unknown;
  fields: Generated_Type_Mutation_Fields;
}

export interface Generated_Type_TripUpdateResponse_Field_launches {
  returnType:
    | null
    | Generated_Type_Launch["rootType"]
    | PromiseLike<null | Generated_Type_Launch["rootType"]>;
  args: {};
}

export interface Generated_Type_TripUpdateResponse_Field_message {
  returnType: null | string | PromiseLike<null | string>;
  args: {};
}

export interface Generated_Type_TripUpdateResponse_Field_success {
  returnType: boolean | PromiseLike<boolean>;
  args: {};
}

export interface Generated_Type_TripUpdateResponse_Fields {
  launches: Generated_Type_TripUpdateResponse_Field_launches;
  message: Generated_Type_TripUpdateResponse_Field_message;
  success: Generated_Type_TripUpdateResponse_Field_success;
}

export interface Generated_Type_TripUpdateResponse {
  rootType: unknown;
  fields: Generated_Type_TripUpdateResponse_Fields;
}

export interface GeneratedScalars {}

export interface GeneratedInterfaces {}

export interface GeneratedUnions {}

export interface GeneratedEnums {
  PatchSize: "LARGE" | "SMALL";
}
export interface GeneratedInputObjects {}
export interface GeneratedObjects {
  Query: Generated_Type_Query;
  Launch: Generated_Type_Launch;
  Mission: Generated_Type_Mission;
  Rocket: Generated_Type_Rocket;
  LaunchConnection: Generated_Type_LaunchConnection;
  User: Generated_Type_User;
  Mutation: Generated_Type_Mutation;
  TripUpdateResponse: Generated_Type_TripUpdateResponse;
}

export interface GeneratedSchema {
  context: t.Context;
  enums: GeneratedEnums;
  objects: GeneratedObjects;
  inputObjects: GeneratedInputObjects;
  unions: GeneratedUnions;
  scalars: GeneratedScalars;
  interfaces: GeneratedInterfaces;
  allInputTypes:
    | Extract<keyof GeneratedInputObjects, string>
    | Extract<keyof GeneratedEnums, string>
    | Extract<keyof GeneratedScalars, string>;
  allOutputTypes:
    | Extract<keyof GeneratedObjects, string>
    | Extract<keyof GeneratedEnums, string>
    | Extract<keyof GeneratedUnions, string>
    | Extract<keyof GeneratedInterfaces, string>
    | Extract<keyof GeneratedScalars, string>;
}

export type Gen = GeneratedSchema;

declare global {
  interface GQLiteralGen extends GeneratedSchema {}
}
