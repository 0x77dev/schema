/**
 * This file was automatically generated by Nexus 0.9.0
 * Do not make changes to this file directly
 */

import * as swapi from "./types/backingTypes"
declare global {
  interface NexusGen extends NexusGenTypes {}
}

export interface NexusGenInputs {
}

export interface NexusGenEnums {
  Episode: 5 | 6 | 4
  MoreEpisodes: 5 | 6 | 4 | "OTHER"
}

export interface NexusGenRootTypes {
  Boolean: boolean;
  Character: swapi.Character;
  Droid: swapi.Droid;
  Float: number;
  Human: swapi.Human;
  ID: string;
  Int: number;
  Query: {};
  String: string;
}

export interface NexusGenFieldTypes {
  Character: { // field return type
    appearsIn: NexusGenEnums['Episode'][]; // [Episode!]!
    friends: NexusGenRootTypes['Character'][]; // [Character!]!
    id: string; // String!
    name: string; // String!
  }
  Droid: { // field return type
    appearsIn: NexusGenEnums['Episode'][]; // [Episode!]!
    friends: NexusGenRootTypes['Character'][]; // [Character!]!
    id: string; // String!
    name: string; // String!
    primaryFunction: string; // String!
  }
  Human: { // field return type
    appearsIn: NexusGenEnums['Episode'][]; // [Episode!]!
    friends: NexusGenRootTypes['Character'][]; // [Character!]!
    homePlanet: string | null; // String
    id: string; // String!
    name: string; // String!
  }
  Query: { // field return type
    droid: NexusGenRootTypes['Droid']; // Droid!
    hero: NexusGenRootTypes['Character']; // Character!
    human: NexusGenRootTypes['Human']; // Human!
  }
}

export interface NexusGenArgTypes {
  Character: {
    appearsIn: { // args
      id: string; // ID!
    }
  }
  Droid: {
    appearsIn: { // args
      id: string; // ID!
    }
  }
  Human: {
    appearsIn: { // args
      id: string; // ID!
    }
  }
  Query: {
    droid: { // args
      id: string; // String!
    }
    hero: { // args
      episode?: NexusGenEnums['Episode'] | null; // Episode
    }
    human: { // args
      id: string; // String!
    }
  }
}

export interface NexusGenAbstractResolveReturnTypes {
  Character: "Droid" | "Human"
}

export interface NexusGenInheritedFields {}

export type NexusGenObjectNames = "Droid" | "Human" | "Query";

export type NexusGenInputNames = never;

export type NexusGenEnumNames = "Episode" | "MoreEpisodes";

export type NexusGenInterfaceNames = "Character";

export type NexusGenScalarNames = "Boolean" | "Float" | "ID" | "Int" | "String";

export type NexusGenUnionNames = never;

export interface NexusGenTypes {
  context: swapi.ContextType;
  inputTypes: NexusGenInputs;
  rootTypes: NexusGenRootTypes;
  argTypes: NexusGenArgTypes;
  fieldTypes: NexusGenFieldTypes;
  inheritedFields: NexusGenInheritedFields;
  objectNames: NexusGenObjectNames;
  inputNames: NexusGenInputNames;
  enumNames: NexusGenEnumNames;
  interfaceNames: NexusGenInterfaceNames;
  scalarNames: NexusGenScalarNames;
  unionNames: NexusGenUnionNames;
  allInputTypes: NexusGenTypes['inputNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['scalarNames'];
  allOutputTypes: NexusGenTypes['objectNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['unionNames'] | NexusGenTypes['interfaceNames'] | NexusGenTypes['enumNames'];
  allNamedTypes: NexusGenTypes['allInputTypes'] | NexusGenTypes['allOutputTypes']
  abstractTypes: NexusGenTypes['interfaceNames'] | NexusGenTypes['unionNames'];
  abstractResolveReturn: NexusGenAbstractResolveReturnTypes;
}

export type Gen = NexusGenTypes;